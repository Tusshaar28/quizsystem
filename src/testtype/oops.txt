Que1: What is encapsulation in OOP?;Bundling data and methods that operate on the data within a single unit;Inheriting properties from another class;Creating new classes based on existing ones;A mechanism for method overriding;0
Que2: What is inheritance in OOP?;A mechanism for creating a new class using an existing class;A way to manage object state;A method for encapsulating data;A method for class abstraction;0
Que3: What is polymorphism in OOP?;The ability to process objects differently based on their data type or class;The concept of hiding the internal details of an object;The ability to define multiple methods with the same name;The ability to extend the functionality of a class;0
Que4: What is abstraction in OOP?;The concept of hiding complex implementation details and showing only essential features;The process of combining data and methods;The ability to define multiple methods with the same name;The mechanism of inheriting properties;0
Que5: What is a class in OOP?;A blueprint for creating objects;A type of data structure;A method for encapsulation;A function for managing objects;0
Que6: What is an object in OOP?;An instance of a class;A type of data structure;A blueprint for creating classes;A method for inheritance;0
Que7: What is method overloading?;Defining multiple methods with the same name but different parameters;Changing the implementation of a method in a derived class;The process of hiding data within a class;The ability to extend the functionality of a class;0
Que8: What is method overriding?;Providing a new implementation of a method in a subclass;Defining multiple methods with the same name;Creating a new class from an existing class;Combining data and methods within a class;0
Que9: What is a constructor in OOP?;A special method used to initialize objects;A method used to delete objects;A method for managing object state;A method for inheriting properties;0
Que10: What is a destructor in OOP?;A special method used to clean up resources before an object is destroyed;A method used to initialize objects;A method for managing object state;A method for defining classes;0
Que11: What is an interface in OOP?;A contract that defines a set of methods that a class must implement;A blueprint for creating objects;A method for encapsulating data;A type of inheritance;0
Que12: What is an abstract class?;A class that cannot be instantiated and is used as a base for other classes;A class that contains only methods without implementation;A class that can be instantiated multiple times;A class that manages object state;0
Que13: What is a member function?;A function that is defined inside a class and operates on class data;A function that operates on global data;A function that manages object state;A function for defining classes;0
Que14: What is a static method?;A method that belongs to the class rather than instances of the class;A method that is inherited from a parent class;A method that is used to initialize objects;A method that manages object state;0
Que15: What is multiple inheritance?;A feature where a class can inherit from more than one parent class;A feature where a class inherits properties from a single parent class;A feature where a class defines multiple methods with the same name;A feature where a class encapsulates multiple data types;0
Que16: What is a subclass?;A class that inherits from another class;A class that manages object state;A class that encapsulates data;A class that defines multiple methods;0
Que17: What is a superclass?;A class that is inherited by other classes;A class that defines multiple methods;A class that manages object state;A class that encapsulates data;0
Que18: What is composition in OOP?;A design principle where a class is composed of one or more objects from other classes;A mechanism for method overloading;A type of inheritance;A method for encapsulating data;0
Que19: What is association in OOP?;A relationship between two classes where one class uses the other;A method for encapsulating data;A type of inheritance;A design principle for managing state;0
Que20: What is aggregation in OOP?;A special type of association where a class contains references to objects of another class;A method for method overloading;A type of inheritance;A design principle for managing state;0
